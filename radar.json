[
    {
        "name": "TypeScript",
        "ring": "adopt",
        "quadrant": "languages & frameworks",
        "isNew": "FALSE",
        "description": "Due to the rising popularity of TypeScript (see https://octoverse.github.com/#top-languages-over-the-years) and the type-safety and other advantages it provides compared to Javascript we have moved to adopt it. \n This means any new services should be written in TypeScript and if any major changes are undertaken on an existing Javascript code base, the introduction of TypeScript should be considered at that time"
    },
    {
        "name": "Node.js",
        "ring": "adopt",
        "quadrant": "languages & frameworks",
        "isNew": "FALSE",
        "description": "Complementing our adoption with TypeScript, the fact we don't have very high performance/throughput considerations, and influenced by the fact that front-end developers could more easily contribute to Node.js+TypeScript code bases: we have adopted Node.js for backend services. \n This means any new services should be written in Node.js"
    },
    {
        "name": "Github Actions",
        "ring": "adopt",
        "quadrant": "platforms",
        "isNew": "TRUE",
        "description": "We feel CI tools which are integrated with our source control are a superior developer experience and Github Actions are a more composable solution with a stronger eco-system than Bitbucket Pipelines. We are migrating repositories from Bitbucket to Github and using Github Actions"
    },
    {
        "name": "Bitbucket pipelines",
        "ring": "hold",
        "quadrant": "platforms",
        "isNew": "FALSE",
        "description": "We feel CI tools which are integrated with our source control are a superior developer experience (as developers do not need to authenticate into the AWS console for pipeline visibility) we moved to adopt Bitbucket pipelines, actively replacing any Codebuild pipelines with Bitbucket pipeline equivalents. Bitbucket pipelines has since been superceded by Github Actions"
    },
    {
        "name": "Feature leading",
        "ring": "adopt",
        "quadrant": "techniques",
        "isNew": "TRUE",
        "description": "Due to the size and seniority of our team, and our relatively constrained product management capacity we have adopted a Feature lead model as described in this wiki page: https://mooven.atlassian.net/wiki/spaces/MT/pages/1835859983/Feature+Leading"
    },
    {
        "name": "Feature flags",
        "ring": "adopt",
        "quadrant": "techniques",
        "isNew": "FALSE",
        "description": "To assist in managing blast radius and providing flexibility to product managers and marketers so they can run early access programmes and determine release strategy we have adopted feature flags as a technique: https://mooven.atlassian.net/wiki/spaces/MT/pages/1717502138/Implement+feature+flags+in+the+platform+and+portal"
    },
    {
        "name": "S3 + Cloudfront",
        "ring": "adopt",
        "quadrant": "platforms",
        "isNew": "TRUE",
        "description": "We deploy our React Web applications using S3+Cloudfront for the reasons outlined on this Wiki page: https://mooven.atlassian.net/wiki/spaces/MT/pages/1762328588/Replace+Elastic+BeanStalk+infrastructure"
    },
    {
        "name": "CDK",
        "ring": "adopt",
        "quadrant": "platforms",
        "isNew": "FALSE",
        "description": "We use declarative infrastructure as code and use CDK as the platform to achieve this for the reasons outlined on this Wiki page: https://mooven.atlassian.net/wiki/spaces/MT/pages/1720549389/Use+declarative+infrastructure+as+code"
    },
    {
        "name": "sandworm-audit",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "We want to 'shift left' security by utilising static code analysis and detect potentially problematic open source licenses in our dependencies when running our CI pipelines. We are trialling the sandworm-audit project https://sandworm.dev/ for this purpose which can run on every push, covering our Javascript code without adding cost. Snyk previously provided this for us, and included support for Maven but is a potentially expensive alternative. Github Code scanning is also an alterative, but is also paid for private repos."
    },
    {
        "name": "snyk",
        "ring": "hold",
        "quadrant": "tools",
        "isNew": "FALSE",
        "description": "We want to 'shift left' security by utilising static code analysis. We adopted snyk for that purpose and should have code and depedency vulnerability scanning in our CI pipelines. Pipelines should fail on high or critical rated vulnerabilities. For repositories that have a number of existing  vulnerabilities that prevent this- there must be an active plan to resolve them to achieve this pipeline blocking state. We are trialling the open source tool sandworm-audit as a replacement for Snyk"
    },
    {
        "name": "CDK for Terraform",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "For provisioning infrastructure outside of AWS, we are wanting to trial CDKTF as gives us the benefit of the strong Terraform ecosystem and the developer experience and consistency benefits of CDK"
    },
    {
        "name": "cdk-nag",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "In order to enforce CDK and security best practices, we want to trial https://github.com/cdklabs/cdk-nag by introducing it into any repository using CDK"
    },
    {
        "name": "Playwright for E2E testing",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "Due to our desire to do some automated e2e testing and some experience within the team with Playright we have moved to trial Playright as our tool for automated e2e testing: https://mooven.atlassian.net/wiki/spaces/MT/pages/1816330241/E2E+testing+strategy"
    },
    {
        "name": "Chromatic + Storybook",
        "ring": "hold",
        "quadrant": "tools",
        "isNew": "FALSE",
        "description": "We wish to heavily use visual regression testing as a technique and have chosen to trial Chromatic and Storybook as tooling to support this: https://mooven.atlassian.net/wiki/spaces/MT/pages/1812365319/UI+Testing+Strategy. After a trial period we decided to trial Ladel.dev instead"
    },
    {
        "name": "Ladel.dev",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "We wish to heavily use visual regression testing as a technique https://mooven.atlassian.net/wiki/spaces/MT/pages/1812365319/UI+Testing+Strategy. After trialling Storybook + Chromatic we have switched to Ladel.dev due to performance reasons"
    },
    {
        "name": "Github dependabot",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "To reduce the amount of regular manual toil required to keep our dependencies up to date we want to trial Github dependabot"
    },
    {
        "name": "Renovate bot",
        "ring": "hold",
        "quadrant": "tools",
        "isNew": "FALSE",
        "description": "To reduce the amount of regular manual toil required to keep our dependencies up to date we want to trial Renovate bot. We are encouraging devs to add the Renovate bot to their repos as part of this trial: https://mooven.atlassian.net/wiki/spaces/MT/pages/1935147022/Adding+the+Renovate+bot+to+a+repo"
    },
    {
        "name": "OpenAPI spec for REST services",
        "ring": "trial",
        "quadrant": "techniques",
        "isNew": "TRUE",
        "description": "In order to assist with client SDK generation and to assist the use of a common inter-domain language, we want to trial every service publishing an Open API specification for their endpoints. See: https://swagger.io/specification/. New REST services should trial this approach, and if we are adding new endpoints to existing services we should also consider trialling this approach"
    },
    {
        "name": "Use low-code tooling for Admin functionality",
        "ring": "assess",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "To decrease the amount of front-end engineering time that is needed to support CS and other non-product team members activities, we are exploring low-code tooling to support administration functions as described in the wiki: https://mooven.atlassian.net/wiki/spaces/MT/pages/1817575463/Use+low-code+tooling+for+Admin+functionality"
    },
    {
        "name": "Javascript",
        "ring": "hold",
        "quadrant": "languages & frameworks",
        "isNew": "FALSE",
        "description": "Due to our adoption of TypeScript, no new components should be created using Javascript. Existing codebases are not actively being migrated, however, if significant changes are being made to an existing Javascript code base the introduction of TypeScript should be considered at that time"
    },
    {
        "name": "AWS Codebuild",
        "ring": "hold",
        "quadrant": "platforms",
        "isNew": "FALSE",
        "description": "Because of our adoption of a CI-in-source-control tools (in our case, Github Actitons) we are actively replaced Codebuild pipelines with Bitbucket pipeline equivalents, which have since been replaced with Github Actions"
    },
    {
        "name": "AWS Elastic Beanstalk",
        "ring": "hold",
        "quadrant": "platforms",
        "isNew": "FALSE",
        "description": "Elastic Beanstalk has been replaced by S3+Cloudfront as our front-end hosting stack for the reasons outlined on this Wiki page: https://mooven.atlassian.net/wiki/spaces/MT/pages/1762328588/Replace+Elastic+BeanStalk+infrastructure"
    },
    {
        "name": "Cross service db table access",
        "ring": "hold",
        "quadrant": "techniques",
        "isNew": "TRUE",
        "description": "In order to successfully utilise domains as a way to encapsulate system complexity and to support independent units of scale and failure- we want to avoid Service A from directly accessing the data tables which are owned by Service B. Data must instead be obtained through published service contracts. New services must not use cross-service data access, and we will actively look for opportunities to remove this from existing services. For example, when doing significant development work on a service- we should consider refactoring to use service calls instead of direct db access"
    },
    {
        "name": "Serverless Framework",
        "ring": "hold",
        "quadrant": "platforms",
        "isNew": "FALSE",
        "description": "Due to our adoption of CDK as our IaC platform and its ecosystem we are actively replacing serverless deployments with CDK"
    },
    {
        "name": "ESLint",
        "ring": "adopt",
        "quadrant": "tools",
        "isNew": "FALSE",
        "description": "ESLint provides a flexible way for us to enforce agreed-upon stylistic rules. TypeScript's standard lib is very wide, allowing for multiple ways of solving the same problem, which can lead to a lot of stylistic variance. ESLint allows us to set up boundaries to avoid this issue and promote consistency. We want to maintain a separate set of rules for FE & BE based applications."
    },
    {
        "name": "Prettier",
        "ring": "adopt",
        "quadrant": "tools",
        "isNew": "FALSE",
        "description": "We  want to offload code formatting to a tool to enforce consistency and allow us to focus on business logic & implementation details during code reviews. Prettier is the best-in-class tool for the job in the JS/TS ecosystem."
    },
    {
        "name": "Husky",
        "ring": "hold",
        "quadrant": "tools",
        "isNew": "FALSE",
        "description": "Husky allows us to easily hook into native Git hooks in the JavaScript/TypeScript ecosystem, and is most often used to write pre-commit hooks to ensure the validity of a commit. However utilising a monorepo the tasks that Husky was used for now take too long to run outside CI."
    },
    {
        "name": "Monorepo",
        "ring": "trial",
        "quadrant": "techniques",
        "isNew": "TRUE",
        "description": "In order to make it easier to re-use libraries and common patterns, and maximise the benefits from our CI security, linting and testing tooling we are trialling a Monorepo as preferred over a repo per service"
    },
    {
        "name": "Turborepo",
        "ring": "trial",
        "quadrant": "tools",
        "isNew": "TRUE",
        "description": "In order to speed up the volumes of formatting, linting and unit testing in a monorepo, we are utilising Turbo and it's remote cache to speed these tasks"
    }
]